version: '3'

services:

  movie-feeder:
    build: .
    container_name: movie-feeder
    environment:
      KAFKA_BROKER_URL: kafka:29092
      TRANSACTIONS_TOPIC: queueing.raw-frames
      FRAME_CAPTURE_PERIOD: 1  # Capture frame at every 'n' seconds
      MOVIE_FILES_SOURCE: "/usr/app/movies"

    volumes:
     - ..:/usr/app/sandbox  #this is for testing the code before commit
     - /tmp/VideoAnalytics/testdata:/usr/app/movies
    working_dir: /usr/app/sandbox/generator
    entrypoint: ["python3", "movie_streamer.py"]
  

  face-detector:
    build: .
    container_name: face-detector
    environment:
      KAFKA_BROKER_URL: kafka:29092
      INPUT_TOPIC: queueing.raw-frames
      OUTPUT_TOPIC: transactions.faces
    volumes:
      - ..:/usr/app/sandbox  #this is for testing the code before commit  
      - /tmp/todelete:/tmp  # transient output. #TODO: to be removed
    working_dir: /usr/app/sandbox/generator
    entrypoint: ["python3", "face_detector.py"]  


  face-matcher:
    build: .
    container_name: face-matcher
    environment:
      KAFKA_BROKER_URL: kafka:29092
      INPUT_TOPIC: transactions.faces
      OUTPUT_TOPIC: transactions.matched-faces
      FACE_DATABASE: /tmp/faces
      FACE_MATCH_TOL: 0.6
    volumes:
      - ..:/usr/app/sandbox  #this is for testing the code before commit    
      - /tmp/faces:/tmp/faces  
    working_dir: /usr/app/sandbox/generator
    entrypoint: ["python3", "face_matcher.py"]    


  filesystem-consumer:
    build: .
    container_name: filesystem-consumer
    environment:
      KAFKA_BROKER_URL: kafka:29092
      INPUT_TOPIC: transactions.faces
      OUTPUT_FILE_LOCATION: /tmp
    volumes:
      - ..:/usr/app/sandbox  #this is for testing the code before commit  
      - /tmp/todelete/filesystem-consumer:/tmp  # transient output. #TODO: to be removed
    working_dir: /usr/app/sandbox/generator
    #entrypoint: ["python3", "filesystem_consumer.py"]  
    


networks:
  default:
    external:
      name: kafka-network
